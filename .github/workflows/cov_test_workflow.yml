name: Run basic tests and determine coverage

on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
    - master
    - dev
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install poetry
      run: |
        pip install -Iv poetry==1.1.7
    - name: Install SyNCoPy
      run: |
        poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and get coverage
      run: |
        cd syncopy/tests
        # run parallel tests only for base CR
        poetry run pytest -k 'computationalroutine and parallel'
        # don't run general parallel tests
        poetry run pytest  -k 'not parallel' --color=yes --tb=short --verbose --cov=../../syncopy --cov-config=../../.coveragerc --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        name: syncopy-codecov
        verbose: true
